version: '3.2'

services:

  nginx-proxy:
    restart: unless-stopped
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/app/nginx.tmpl
    networks:
      - null_signal


  acme-companion:
    restart: unless-stopped
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=mail@yourdomain.tld
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - null_signal


  netrunner_cards_json:
    restart: none
    image: registry.digitalocean.com/nsgcr/netrunner-cards-json:latest
    volumes:
      - netrunner-cards-json:/mnt/netrunner-cards-json


  nrdb_api_server:
    restart: unless-stopped
    image: registry.digitalocean.com/nsgcr/nrdb-api-server:latest
    ports:
      - "3000:3000"
    networks:
      - backend
      - null_signal
    env_file: .env
    # rely on the RAILS_ENV value of the host machine
    environment:
      POSTGRES_PASSWORD: netrunnerdb
      RAILS_ENV: $RAILS_ENV
    # starts the app container after the DB and netrunner_cards_json containers
    depends_on:
      - db
      - netrunner_cards_json
    volumes:
      - ./config/database.yml:/var/www/nrdb-api/config/database.yml
      - netrunner-cards-json:/netrunner-cards-json
      - nrdb-api-logs:/var/www/nrdb-api/log


  db:
    restart: unless-stopped
    image: postgres:14.5-alpine
    networks:
     - backend
    environment:
      POSTGRES_PASSWORD: netrunnerdb
    volumes:
      - nrdb-api-postgres:/var/lib/postgresql/data

networks:
  backend:
  null_signal:
    external: true

volumes:
  conf:
  vhost:
  html:
  certs:
  acme:
  nrdb-api-logs:
  nrdb-api-postgres:
  netrunner-cards-json:
